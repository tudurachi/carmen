setwd("C:/Users/Carmen/Desktop/logistica")
diabet<-read.csv("diabet_final.csv")
attach(diabet)

#transformam variabila age in 3 categorii
install.packages("rockchalk")
library(rockchalk)
diabet$age<-combineLevels(diabet$age,levs = c("[0-10)", "[10-20)","[20-30)"), newLabel = c("[0-30)") )
diabet$age<-combineLevels(diabet$age,levs= c("[30-40)", "[40-50)", "[50-60)"), newLabel=c("[30-60)"))
diabet$age<-combineLevels(diabet$age,levs= c("[60-70)", "[70-80)", "[80-90)", "[90-100)"), newLabel=c("[60-100)"))      


diabet<-diabet[, -1]
attach(diabet)

summary(age)

install.packages("ROCR")
library(ROCR)

#################
summary(diabet$race) ## caucasian
diabet$race<-relevel(diabet$race, ref="Caucasian")
summary(gender) ## female
diabet$gender<-relevel(diabet$gender, ref="Female")

summary(age)   ### 60-100
diabet$age<-relevel(diabet$age, ref="[60-100)")

summary(diabet$readmitted)
diabet$readmitted<-relevel(diabet$readmitted, ref="<30")

summary(A1Cresult)
diabet$A1Cresult<-relevel(diabet$A1Cresult, ref = "Norm")

summary(diabet$max_glu_serum)
diabet$max_glu_serum<-relevel(diabet$max_glu_serum, ref = "Norm")


####boxplot
boxplot(diabet$time_in_hospital)
summary(time_in_hospital)
boxplot.stats(time_in_hospital)$out


boxplot(num_lab_procedures)
boxplot.stats(num_lab_procedures)$out

boxplot(num_procedures)
boxplot.stats(num_procedures)$out
summary(num_procedures)

boxplot(num_medications)
boxplot.stats(num_medications)$out
summary(num_medications)

boxplot(number_outpatient)
boxplot.stats(number_outpatient)$out
summary(number_outpatient)

boxplot(number_emergency)
boxplot.stats(number_emergency)$out
summary(number_emergency)

boxplot(number_inpatient)
boxplot.stats(number_inpatient)$out
summary(number_inpatient)

boxplot(number_diagnoses)
boxplot.stats(number_diagnoses)$out
summary(number_diagnoses)


###########tabele de contingenta
tabel1<-table(diabet$readmitted, diabet$A1Cresult)
print(tabel1)


cs<-chisq.test(tabel1)
print(cs)
cs$observed
cs$expected



### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel2<-table(diabet$readmitted, diabet$insulin)
print(tabel2)
cs<-chisq.test(tabel2)
print(cs)
cs$observed
cs$expected


### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale



tabel11<-table(diabet$readmitted, diabet$max_glu_serum)
print(tabel11)
cs<-chisq.test(tabel11)
print(cs)
cs$observed
cs$expected

### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale


tabel13<-table(diabet$readmitted, diabet$change)
print(tabel13)
cs<-chisq.test(tabel13)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel14<-table(diabet$readmitted, diabet$diabetesMed)
print(tabel14)
cs<-chisq.test(tabel14)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel15<-table(diabet$readmitted, diabet$diag1)
print(tabel15)
cs<-chisq.test(tabel15)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel16<-table(diabet$readmitted, diabet$diag2)
print(tabel16)
cs<-chisq.test(tabel16)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel17<-table(diabet$readmitted, diabet$diag3)
print(tabel17)
cs<-chisq.test(tabel17)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel18<-table(diabet$readmitted, diabet$admission_source)
print(tabel18)
cs<-chisq.test(tabel18)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel19<-table(diabet$readmitted, diabet$discharged_to)
print(tabel19)
cs<-chisq.test(tabel19)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel20<-table(diabet$readmitted, diabet$payer_code)
print(tabel20)
cs<-chisq.test(tabel20)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel21<-table(diabet$readmitted, diabet$race)
print(tabel21)
cs<-chisq.test(tabel21)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel22<-table(diabet$readmitted, diabet$gender)
print(tabel22)
cs<-chisq.test(tabel22)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

tabel23<-table(diabet$readmitted, diabet$age)
print(tabel23)
cs<-chisq.test(tabel23)
print(cs)
cs$observed
cs$expected
### Conform sig,se respinge ipoteza nula,  cele 2 distributii nu sunt egale

install.packages("grid")
library(vcd)
assocstats(tabel1)
assocstats(tabel2)
assocstats(tabel11)

assocstats(tabel13)
assocstats(tabel14)
assocstats(tabel15)
assocstats(tabel16)
assocstats(tabel17)
assocstats(tabel18)
assocstats(tabel19)
assocstats(tabel20)
assocstats(tabel21)
assocstats(tabel22)
assocstats(tabel23)
####regresie logistica simpla



#regresie logistica simplapt variabila rasa
model1<-glm(readmitted~race, data=diabet, family="binomial")

#regresie logistica ordinala simpla pt rasa
summary(model1)
install.packages("MASS")
library(MASS)
install.packages("Hmisc")
library(Hmisc)
install.packages("reshape2")
library(reshape2)
m1<-polr(readmitted~race, data=diabet, Hess=TRUE)
summary(m1)
(ctable<-coef(summary(m1)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=p))
summary(ctable)
(ci<-confint(m1))
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
install.packages("Hmisc")
library(Hmisc)
exp(cbind(OR = coef(m1), ci))

#regresie logistica simpla pt variabila gen
model2<-glm(readmitted~gender, data=diabet, family="binomial")
summary(model2)

#regresie logistica ordinala simpla pt GEN
install.packages("MASS")
library(MASS)
m1<-polr(readmitted~gender, data=diabet, Hess=TRUE)
summary(m1)
(ctable<-coef(summary(m1)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=p))
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
install.packages("Hmisc")
library(Hmisc)
exp(cbind(OR = coef(m1), ci))

#regresia logistica simpla pt variabila varsta
model3<-glm(readmitted~age, data=diabet, family="binomial")
summary(model3)
#regresia logistica simpla ordinala pt var varsta
m1<-polr(readmitted~age, data=diabet, Hess=TRUE)
summary(m1)
(ctable<-coef(summary(m1)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=p))
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))

#regresia logistica simpla pt variabila time in hospital
model3<-glm(readmitted~time_in_hospital, data=diabet, family="binomial")
summary(model3)

#regresia logistica simpla ordinala pt time in hospital
m1<-polr(readmitted~time_in_hospital, data=diabet, Hess=TRUE)
summary(m1)
attach(diabet)
(ctable<-coef(summary(m1)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=p))
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))

#regresia logistica simpla pt variabila num_lab_procedures
model4<-glm(readmitted~num_lab_procedures, data=diabet, family="binomial")
summary(model4)

#regresia logistica ordinala pt variabila num_lab_procedures
m1<-polr(readmitted~num_lab_procedures, data=diabet, Hess=TRUE)
summary(m1)
(ctable<-coef(summary(m1)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=p))
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))  #0.9961227


#regresia logistica simpla pt variabila number of procedures
model5<-glm(readmitted~num_procedures, data=diabet, family="binomial")
summary(model5)

#regresia logistica ordinala pt variabila number of procedures
m1<-polr(readmitted~num_procedures, data=diabet, Hess=TRUE)
summary(m1)
(ctable<-coef(summary(m1)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=p))
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla - number of medications
model6<-glm(readmitted~num_medications, data=diabet, family="binomial")
summary(model6)
#regresia logistica ordinala pt variabila number of medications
m1<-polr(readmitted~num_medications, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))

#regresia logistica simpla pt number_outpatient
model7<-glm(readmitted~number_outpatient, data=diabet, family="binomial")
summary(model7)
#regresia logistica ordinala pt variabila number of outpatient
m1<-polr(readmitted~number_outpatient, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla variabila number energency
model8<-glm(readmitted~number_emergency, data=diabet, family="binomial")
summary(model8)
#semnif
#regresia logistica ordinala pt variabila number emergencies
m1<-polr(readmitted~number_emergency, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla pt variabila number inpatient
model9<-glm(readmitted~number_inpatient, data=diabet, family="binomial")
summary(model9)
#semnif
#regresia logistica ordinala pt variabila number inpatient
m1<-polr(readmitted~number_inpatient, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla number diagnoses
model10<-glm(readmitted~number_diagnoses, data=diabet, family="binomial")
summary(model10)
#semnif

#regresia logistica ordinala pt variabila number inpatient
m1<-polr(readmitted~number_diagnoses, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla max glu serum
model11<-glm(readmitted~max_glu_serum, data=diabet, family="binomial")
summary(model11)
##nesemnific

#regresia logistica ordinala pt variabila glucose serum test result
m1<-polr(readmitted~max_glu_serum, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))

#regresia logistica simpla pt variabila A1Crescut
model12<-glm(readmitted~A1Cresult, data=diabet, family="binomial")
summary(model12)
##semnif doar categoria  A1CresultNOne

#regresia logistica ordinala pt variabila A1Crescut
m1<-polr(readmitted~A1Cresult, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla pt variabila insulin
model13<-glm(readmitted~insulin, data=diabet, family="binomial")
summary(model13)
##semnif

#regresia logistica ordinala pt variabila medicamentul administrat insulina
m1<-polr(readmitted~insulin, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresie logistica simpla pt variabila change of medications
model14<-glm(readmitted~change, data=diabet, family="binomial")
summary(model14)
##semnif

#regresia logistica ordinala pt variabila change of medications
m1<-polr(readmitted~change, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla pt variabila Diabetes Medications
model15<-glm(readmitted~diabetesMed, data=diabet, family="binomial")
summary(model15)
##mi-a arata doar categoria yes, care este semnifcativa

#regresia logistica ordinala pt variabila Diabetes medications
m1<-polr(readmitted~diabetesMed, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla pt variabila diagnostic primar prescris
model16<-glm(readmitted~diag1, data=diabet, family="binomial")
summary(model16)
##categoriile genitourinar,injury, digestiv-sunt nesemnifcative 

#regresia logistica ordinala pt variabila diag 1
m1<-polr(readmitted~diag1, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))

#regresia logistica simpla pt diag2
model17<-glm(readmitted~diag2, data=diabet, family="binomial")
summary(model17)
##doar categoria neoplasms este semnific

#regresia logistica ordinala pt variabila diag 2
m1<-polr(readmitted~diag2, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla pt diag 3
model18<-glm(readmitted~diag3, data=diabet, family="binomial")
summary(model18)
##categ diabetes, injury, musculoskeletal, other- sunt nesemnfic

#regresia logistica ordinala pt variabila diag 3
m1<-polr(readmitted~diag3, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresia logistica simpla pt variabila sursa internarii
model19<-glm(readmitted~admission_source, data=diabet, family="binomial")
summary(model19)
##categoria other-nesemnificativa

#regresia logistica ordinala pt variabila sursa internarii
m1<-polr(readmitted~admission_source, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresie logistica simpla pt variabila externare
model20<-glm(readmitted~discharged_to, data=diabet, family="binomial")
summary(model20)
##semnificativ

#regresia logistica ordinala pt variabila externare
m1<-polr(readmitted~discharged_to, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))


#regresie logistica simpla pt variabila payer_code
model21<-glm(readmitted~payer_code, data=diabet, family="binomial")
summary(model21)
##mi-a arata doar categoria self pay, care este semnifcativ


#regresia logistica ordinala pt variabila payer_code
m1<-polr(readmitted~payer_code, data=diabet, Hess=TRUE)
summary(m1)
ctable<-coef(summary(m1))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
ctable<-cbind(ctable, "p value"=p)
summary(ctable)
ci<-confint(m1)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m1), ci))

install.packages("rms")
library(rms)


mod1b <- lrm(readmitted ~.,data = diabet)
mod1b

model0<-glm(readmitted~., data=diabet, family="binomial")
summary(model0)


model_semn<-glm(readmitted~age+time_in_hospital+num_procedures+num_medications+number_emergency+
                  number_inpatient+number_diagnoses+A1Cresult+insulin+change+diabetesMed+
                  diag1+discharged_to, data = diabet, family="binomial")
summary(model_semn)

#regresie logistica multipla ordinala
summary(model1)
install.packages("MASS")
library(MASS)
install.packages("Hmisc")
library(Hmisc)
install.packages("reshape2")
library(reshape2)

#impartirea datelor in doua seturi de date: training si testare
install.packages("caTool")
library(caTools)
set.seed(123)
indices = sample.split(diabet$readmitted, SplitRatio = 0.7)
train = diabet[indices,]
validation = diabet[!(indices),]


#modelul cu toate variabilele

m <- polr(readmitted ~ age+race+gender+time_in_hospital+num_lab_procedures+num_procedures+
           num_medications+number_outpatient+number_emergency+
            number_inpatient+number_diagnoses+max_glu_serum+A1Cresult+insulin+change+diabetesMed+
            diag1+diag2+diag3+admission_source+discharged_to+payer_code, data = train, Hess=TRUE)
summary(m)
(ctable<-coef(summary(m)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=round(p,3)))
summary(ctable)
ci<-confint(m)
#obtinerea raportului de sanse (OR) si a intervalului de increde pt OR
exp(cbind(OR = coef(m), ci))


#modelul fara variabilele nesemnificative
m2 <- polr(readmitted ~ age+race+gender+time_in_hospital+num_procedures+
            num_medications+number_outpatient+number_emergency+
            number_inpatient+number_diagnoses+insulin+change+diabetesMed+
            +admission_source+payer_code, data = train, Hess=TRUE)
summary(m2)

#in modelul m2 au fost reintroduse treptate variabilele nesemnificative

(ctable<-coef(summary(m2)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=round(p,3)))
summary(ctable)

#compararea celor doua modele cu likelihood ratio test
install.packages("epiDisplay")
library(epiDisplay)
lrtest (m, m2)
#conform p-value<0.05 modelul cu mai multe variabile este mai potrivit

#adaugarea de interactiuni intre variabile
m_interac1 <- polr(readmitted ~ age+race+gender+time_in_hospital+num_lab_procedures+num_procedures+
            num_medications+number_outpatient+number_emergency+
            number_inpatient+number_diagnoses+max_glu_serum+A1Cresult+insulin+change+diabetesMed+
            diag1+diag2+diag3+admission_source+discharged_to+payer_code+time_in_hospital*num_medications, data = train, Hess=TRUE)
summary(m_interac1)
lrtest (m, m_interac1)

m_interac2 <- polr(readmitted ~ age+race+gender+time_in_hospital+num_lab_procedures+num_procedures+
                     num_medications+number_outpatient+number_emergency+
                     number_inpatient+number_diagnoses+max_glu_serum+A1Cresult+insulin+change+diabetesMed+
                     diag1+diag2+diag3+admission_source+discharged_to+payer_code+time_in_hospital*num_medications+
                     num_lab_procedures*num_procedures, data = train, Hess=TRUE)
lrtest (m_interac1, m_interac2)

m_interac3 <- polr(readmitted ~ age+race+gender+time_in_hospital+num_lab_procedures+num_procedures+
                     num_medications+number_outpatient+number_emergency+
                     number_inpatient+number_diagnoses+max_glu_serum+A1Cresult+insulin+change+diabetesMed+
                     diag1+diag2+diag3+admission_source+discharged_to+payer_code+time_in_hospital*num_medications+
                     num_lab_procedures*num_procedures+number_inpatient*number_emergency, data = train, Hess=TRUE)

lrtest (m_interac2, m_interac3)

m_interac4 <- polr(readmitted ~ age+race+gender+time_in_hospital+num_lab_procedures+num_procedures+
                     num_medications+number_outpatient+number_emergency+
                     number_inpatient+number_diagnoses+max_glu_serum+A1Cresult+insulin+change+diabetesMed+
                     diag1+diag2+diag3+admission_source+discharged_to+payer_code+time_in_hospital*num_medications+
                     num_lab_procedures*num_procedures+number_inpatient*number_emergency+
                     number_diagnoses*number_outpatient, data = train, Hess=TRUE)
lrtest(m_interac3, m_interac4)

m_interac5 <- polr(readmitted ~ age+race+gender+time_in_hospital+num_lab_procedures+num_procedures+
                     num_medications+number_outpatient+number_emergency+
                     number_inpatient+number_diagnoses+max_glu_serum+A1Cresult+insulin+change+diabetesMed+
                     diag1+diag2+diag3+admission_source+discharged_to+payer_code+time_in_hospital*num_medications+
                     num_lab_procedures*num_procedures+number_inpatient*number_emergency+
                     number_diagnoses*number_outpatient+num_medications*change, data = train, Hess=TRUE)
lrtest(m_interac4, m_interac5)

(ctable<-coef(summary(m_interac5)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=round(p,3)))
summary(ctable)

#stepwise
install.packages("MASS")
library(MASS)
model_2<- stepAIC(m_interac5, direction="both")
summary(model_2)


#evaluarea modelului m_interac5

pred = predict(m_interac5, newdata=validation)
summary(pred)
accuracy <- table(pred, validation[,"readmitted"])
sum(diag(accuracy))/sum(accuracy)

#matricea de confuzie
library(caret)
confusionMatrix(data=pred, validation$readmitted)


#verificarea liniaritatii logitului

m <- polr(readmitted ~ age+race+gender+time_in_hospital+num_lab_procedures+num_procedures+
            num_medications+number_outpatient+number_emergency+
            number_inpatient+number_diagnoses+max_glu_serum+A1Cresult+insulin+change+diabetesMed+
            diag1+diag2+diag3+admission_source+discharged_to+payer_code+
          num_medications^2*log(num_medications)+time_in_hospital*log(time_in_hospital)+
            num_lab_procedures^2*log(num_lab_procedures)+number_diagnoses^2*log(number_diagnoses)
            , data = train, Hess=TRUE)
summary(m)
(ctable<-coef(summary(m)))
p<-pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) *2
(ctable<-cbind(ctable, "p value"=round(p,3)))

